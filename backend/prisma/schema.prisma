// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma" 
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Category {
  Arithmetic
  Algebra
  Geometry
  Mixed
}
enum GameStatus {
Tie
Win
Lose
}


model User {
  id        String    @id @default(uuid())
  username  String    @unique
  email     String    @unique
  createdAt DateTime  @default(now())
  ratings   Rating[]
  stats     Json      
  firstPlayerGames  Game[] @relation("FirstPlayerGames")
  secondPlayerGames Game[] @relation("SecondPlayerGames")
  wonGames          Game[] @relation("WinnerGames")
  }
model Rating {
  userId      String
  category    Category
  rating      Int              @default(1200)
  gamesPlayed Int              @default(0)

  user User @relation(fields: [userId], references: [id])

  @@id([userId, category]) 
}
model Game {
  id Int @id @default(autoincrement())
  firstPlayerId String 
  secondPlayerId String
  winnerId String?
  category Category
  tie Boolean
  firstPlayer  User @relation("FirstPlayerGames", fields: [firstPlayerId], references: [id], onDelete: Cascade)
  secondPlayer User @relation("SecondPlayerGames", fields: [secondPlayerId], references: [id], onDelete: Cascade)
  winner       User? @relation("WinnerGames", fields: [winnerId], references: [id], onDelete: SetNull)
  gameRound    GameRound[]
  }
  
enum QuestionStatus {
Passed
Failed
Skipped
  }
  model GameRound{
  id Int @id @default(autoincrement())
  gameId Int
  questionId Int
  questionStatus QuestionStatus
  points Int
  question Question @relation(fields: [questionId],references: [id])
  game     Game     @relation(fields: [gameId],references: [id])

}
model Question {
  id                  Int       @id @default(autoincrement())
  questionText        String
  category            Category
  ratingBucket        Int
  correctAnswer       String
  stepByStepSolution  String?   
  imageUrl            String?   
  round               GameRound[]
  @@index([category, ratingBucket])
}